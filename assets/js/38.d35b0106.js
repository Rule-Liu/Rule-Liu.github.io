(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{397:function(t,e,n){"use strict";n.r(e);var a=n(42),s=Object(a.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"spring-cloud-gateway-oauth2-sso搭建微服务的统一认证授权中心"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#spring-cloud-gateway-oauth2-sso搭建微服务的统一认证授权中心"}},[t._v("#")]),t._v(" "),n("strong",[t._v("Spring Cloud Gateway + Oauth2 + SSO搭建微服务的统一认证授权中心")])]),t._v(" "),n("h3",{attrs:{id:"一、简介"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一、简介"}},[t._v("#")]),t._v(" "),n("strong",[t._v("一、简介")])]),t._v(" "),n("h4",{attrs:{id:"_1-1-spring-cloud-gateway-网关服务"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-spring-cloud-gateway-网关服务"}},[t._v("#")]),t._v(" 1.1 Spring Cloud Gateway 网关服务")]),t._v(" "),n("p",[t._v("相比大家都应该知道。主要是统一我们的接口请求转发，将我们对其他服务的请求都通过网关进行转发。API网关封装了系统内部架构，为每个客户端提供一个定制的API。它可能还具有其它职责，如身份验证、监控、负载均衡、缓存、请求分片与管理、静态响应处理。API网关方式的核心要点是，所有的客户端和消费端都通过统一的网关接入微服务，在网关层处理所有的非业务功能。网关应当具备以下功能：")]),t._v(" "),n("ul",[n("li",[t._v("性能：API高可用，负载均衡，容错机制。")]),t._v(" "),n("li",[t._v("安全：权限身份认证、脱敏，流量清洗，后端签名（保证全链路可信调用）,黑名单（非法调用的限制）。")]),t._v(" "),n("li",[t._v("日志：日志记录（spainid,traceid）一旦涉及分布式，全链路跟踪必不可少。")]),t._v(" "),n("li",[t._v("缓存：数据缓存。")]),t._v(" "),n("li",[t._v("监控：记录请求响应数据，api耗时分析，性能监控。")]),t._v(" "),n("li",[t._v("限流：流量控制，错峰流控，可以定义多种限流规则。")]),t._v(" "),n("li",[t._v("灰度：线上灰度部署，可以减小风险。")]),t._v(" "),n("li",[t._v("路由：动态路由规则。")])]),t._v(" "),n("h4",{attrs:{id:"_1-2-spring-cloud-gateway的特性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-spring-cloud-gateway的特性"}},[t._v("#")]),t._v(" 1.2 Spring Cloud Gateway的特性")]),t._v(" "),n("ul",[n("li",[t._v("基于Spring Framework 5、Project Reactor和Spring Boot 2.0构建")]),t._v(" "),n("li",[t._v("能够在任意请求属性上匹配路由")]),t._v(" "),n("li",[t._v("predicates（谓词） 和 filters（过滤器）是特定于路由的")]),t._v(" "),n("li",[t._v("集成了Hystrix断路器")]),t._v(" "),n("li",[t._v("集成了Spring Cloud DiscoveryClient")]),t._v(" "),n("li",[t._v("易于编写谓词和过滤器")]),t._v(" "),n("li",[t._v("请求速率限制")]),t._v(" "),n("li",[t._v("路径重写")])]),t._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/rule-liu/pic/raw/master/img/clipboard.png",alt:"img"}})]),t._v(" "),n("p",[t._v("接下来介绍下Oauth2，这个主要是一种认证思路，可以去搜下阮一峰老师的Oauth2的基础知识，就应该明白了Oauth2 到底是什么。下面说下Oauth2 认证的几种方式，下面会使用授权码的方式进行认证。")]),t._v(" "),n("h4",{attrs:{id:"_1-3-oauth2-认证方式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-oauth2-认证方式"}},[t._v("#")]),t._v(" 1.3 Oauth2 认证方式")]),t._v(" "),n("p",[t._v("**1. 授权码（authorization code）方式，指的是第三方应用先申请一个授权码，然后再用该码获取令牌 **。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("https://b.com/oauth/authorize?response_type=code&client_id=CLIENT_ID&redirect_uri=CALLBACK_URL&scope=read\n")])])]),n("p",[t._v("大概流程就是A向B 发起上面的请求，然后地址跳转到 "),n("a",{attrs:{href:"https://b.com/oauth/authorize?response_type=code&client_id=CLIENT_ID&redirect_uri=CALLBACK_URL&scope=read",target:"_blank",rel:"noopener noreferrer"}},[t._v("CALLBACK_URL"),n("OutboundLink")],1),t._v("?code=XXX,然后跳转的页面url后会附带上授权码，然后A拿到授权码，向认证中心请求token（令牌），下面地址就是请求地址。最后得到access_token。拿到 access_token 作为请求的header去请求的url.")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("https://b.com/oauth/token?\n client_id=CLIENT_ID&\n client_secret=CLIENT_SECRET&\n grant_type=authorization_code&\n code=AUTHORIZATION_CODE&\n redirect_uri=CALLBACK_URL\n")])])]),n("p",[n("strong",[t._v("2. 隐藏式（implicit）")])]),t._v(" "),n("p",[n("strong",[t._v("3. 密码式（password）")])]),t._v(" "),n("p",[n("strong",[t._v("4. 凭证式（client credentials）")])]),t._v(" "),n("h3",{attrs:{id:"二、项目搭建"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二、项目搭建"}},[t._v("#")]),t._v(" 二、项目搭建")]),t._v(" "),n("p",[t._v("接下来就是最重要的项目搭建环节了，首先总体的流程如下图所示")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/rule-liu/pic/raw/master/img/%E6%9D%83%E9%99%90%E6%B5%81%E7%A8%8B%E5%9B%BE.png",alt:"权限流程图"}})]),t._v(" "),n("p",[t._v("文件目录如下：该项目是一个聚合项目，下面红色圈出的就是这个项目需要使用到的模块，其余模块不需要理会。")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/rule-liu/pic/raw/master/img/image-20210405102631641.png",alt:"image-20210405102631641"}})]),t._v(" "),n("h4",{attrs:{id:"_1-搭建springcloud-demo-全局依赖"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-搭建springcloud-demo-全局依赖"}},[t._v("#")]),t._v(" 1. 搭建springcloud-demo 全局依赖")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("xml version"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1.0"')]),t._v(" encoding"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UTF-8"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("project xmlns"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://maven.apache.org/POM/4.0.0"')]),t._v(" xmlns"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("xsi"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://www.w3.org/2001/XMLSchema-instance"')]),t._v("\n         xsi"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("schemaLocation"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("modelVersion"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.0")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("modelVersion"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("com"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rule"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("demo"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("groupId"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("nacos"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("spring"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("cloud"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("demo"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("artifactId"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("SNAPSHOT"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("version"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("packaging"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("pom"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("packaging"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("modules"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("module")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("springcloud"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("common"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("module")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("module")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("nacos"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("service"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("provider"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("module")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("module")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("nacos"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("service"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("consumer"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("module")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("module")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("springcloud"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("gateway"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("module")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("module")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("springcloud"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("auth"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("module")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("module")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("oauth"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("client"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("module")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("module")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("oauth"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("client2"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("module")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("modules"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("parent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("springframework"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("boot"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("groupId"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("boot"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("starter"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("parent"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("artifactId"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.3")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v(".2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("RELEASE"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("version"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("relativePath"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" lookup parent from repository "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("parent"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("properties"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("java"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("version"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.8")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("java"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("version"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("properties"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependencyManagement"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("springcloud"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependencies"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("springframework"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cloud"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("groupId"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("cloud"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("dependencies"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("artifactId"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Hoxton")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SR5"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("version"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("type"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("pom"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("type"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("scope"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("scope"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("dependency"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("springcloud alibaba"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("com"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("alibaba"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cloud"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("groupId"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("cloud"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("alibaba"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("dependencies"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("artifactId"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.2")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("RELEASE"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("version"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("type"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("pom"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("type"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("scope"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("scope"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("dependency"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("dependencies"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("dependencyManagement"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependencies"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("projectlombok"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("groupId"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("lombok"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("artifactId"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.18")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v(".18")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("version"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("dependency"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("com"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("alibaba"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cloud"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("groupId"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("cloud"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("starter"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("alibaba"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("nacos"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("config"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("artifactId"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("dependency"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("springframework"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cloud"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("groupId"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("cloud"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("starter"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("openfeign"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("artifactId"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("dependency"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("com"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("alibaba"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cloud"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("groupId"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("cloud"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("starter"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("alibaba"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("nacos"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("discovery"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("artifactId"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("dependency"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("springframework"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("boot"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("groupId"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("boot"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("starter"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("actuator"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("artifactId"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("dependency"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("dependencies"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("build"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("plugins"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("plugin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("maven"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("compiler"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("plugin"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("artifactId"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("configuration"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("source"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.8")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("source"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("target"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.8")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("target"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("configuration"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("plugin"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("plugins"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("build"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("project"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),n("p",[t._v("​")]),t._v(" "),n("h4",{attrs:{id:"_2-搭建springcloud-common-这里主要是做数据库连接的配置、redis、nacos配置信息的共用配置-减少后续项目使用相同配置的冗余"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-搭建springcloud-common-这里主要是做数据库连接的配置、redis、nacos配置信息的共用配置-减少后续项目使用相同配置的冗余"}},[t._v("#")]),t._v(" 2. 搭建springcloud-common，这里主要是做数据库连接的配置、redis、nacos配置信息的共用配置，减少后续项目使用相同配置的冗余")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/rule-liu/pic/raw/master/img/image-20210405103221977.png",alt:"image-20210405103221977"}})]),t._v(" "),n("p",[n("strong",[t._v("2.1 pom.xml")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('<?xml version="1.0" encoding="UTF-8"?>\n<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">\n   <modelVersion>4.0.0</modelVersion>\n   <parent>\n      <groupId>com.rule.demo</groupId>\n      <artifactId>nacos-spring-cloud-demo</artifactId>\n      <version>0.0.1-SNAPSHOT</version>\n   </parent>\n   <groupId>com.rule</groupId>\n   <artifactId>springcloud-common</artifactId>\n   <version>0.0.1-SNAPSHOT</version>\n   <name>springcloud-common</name>\n   <description>公共组件包</description>\n   <packaging>jar</packaging>\n   <properties>\n      <java.version>1.8</java.version>\n   </properties>\n   <dependencies>\n      <dependency>\n         <groupId>org.springframework.boot</groupId>\n         <artifactId>spring-boot-starter</artifactId>\n      </dependency>\n      <dependency>\n         <groupId>org.projectlombok</groupId>\n         <artifactId>lombok</artifactId>\n         <optional>true</optional>\n      </dependency>\n      <dependency>\n         <groupId>mysql</groupId>\n         <artifactId>mysql-connector-java</artifactId>\n         <version>8.0.13</version>\n      </dependency>\n      <dependency>\n         <groupId>org.springframework.cloud</groupId>\n         <artifactId>spring-cloud-starter-oauth2</artifactId>\n      </dependency>\n      <dependency>\n         <groupId>io.jsonwebtoken</groupId>\n         <artifactId>jjwt</artifactId>\n         <version>0.9.0</version>\n      </dependency>\n      \x3c!--mybatis-plus--\x3e\n      <dependency>\n         <groupId>com.baomidou</groupId>\n         <artifactId>mybatis-plus</artifactId>\n         <version>3.4.2</version>\n      </dependency>\n      <dependency>\n         <groupId>com.baomidou</groupId>\n         <artifactId>mybatis-plus-boot-starter</artifactId>\n         <version>3.0.5</version>\n      </dependency>\n      <dependency>\n         <groupId>org.mybatis.spring.boot</groupId>\n         <artifactId>mybatis-spring-boot-starter</artifactId>\n         <version>2.1.3</version>\n      </dependency>\n      \x3c!-- 引入Druid依赖，阿里巴巴所提供的数据源 --\x3e\n      <dependency>\n         <groupId>com.alibaba</groupId>\n         <artifactId>druid</artifactId>\n         <version>1.1.10</version>\n      </dependency>\n      \x3c!--redis--\x3e\n      <dependency>\n         <groupId>org.springframework.boot</groupId>\n         <artifactId>spring-boot-starter-data-redis</artifactId>\n      </dependency>\n   </dependencies>\n</project>\n')])])]),n("h5",{attrs:{id:"_2-2-配置全局的tokenstore"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-配置全局的tokenstore"}},[t._v("#")]),t._v(" 2.2 配置全局的TokenStore")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('@Configuration\npublic class JwtTokenStoreConfig {\n\n    /**\n     * 秘钥串\n     */\n    private static final String SIGNING_KEY = "SigningKey";\n    \n    @Resource\n    private UserMapper userMapper;\n\n    @Bean\n    public TokenStore jwtTokenStore() {\n        return new JwtTokenStore(accessTokenConverter());\n    }\n\n    // JWT\n    @Bean\n    public JwtAccessTokenConverter accessTokenConverter() {\n        JwtAccessTokenConverter accessTokenConverter = new JwtAccessTokenConverter() {\n            /***\n             * 重写增强token方法,用于自定义一些token总需要封装的信息\n             */\n            @Override\n            public OAuth2AccessToken enhance(OAuth2AccessToken accessToken, OAuth2Authentication authentication) {\n                String userName = authentication.getUserAuthentication().getName();\n                // 数据库中查询用户信息\n                QueryWrapper<UserInfo> wrapper = new QueryWrapper<>();\n                wrapper.eq("username", userName);\n                UserInfo userInfo = userMapper.selectOne(wrapper);\n                // 得到用户名，去处理数据库可以拿到当前用户的信息和角色信息（需要传递到服务中用到的信息）\n                final Map<String, Object> additionalInformation = new HashMap<>();\n                additionalInformation.put("userInfo", JSON.toJSONString(userInfo));\n                ((DefaultOAuth2AccessToken) accessToken).setAdditionalInformation(additionalInformation);\n                return super.enhance(accessToken, authentication);\n            }\n        };\n        // 测试用,资源服务使用相同的字符达到一个对称加密的效果,生产时候使用RSA非对称加密方式\n        accessTokenConverter.setSigningKey(SIGNING_KEY);\n        return accessTokenConverter;\n    }\n}\n')])])]),n("h5",{attrs:{id:"_2-3-配置全局的-passwordencoder"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-配置全局的-passwordencoder"}},[t._v("#")]),t._v(" "),n("strong",[t._v("2.3 配置全局的 PasswordEncoder")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("@Component\npublic class MyPasswordEncoder extends BCryptPasswordEncoder {\n}\n")])])]),n("p",[n("strong",[t._v("2.4 登录的用户信息UserInfo")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('@Data\n@TableName(value = "t_user")\npublic class UserInfo {\n\n    @TableId(value = "ID", type = IdType.AUTO)\n    private Integer id;\n\n    /**\n     * 用户名\n     */\n    private String username;\n\n    /**\n     * 密码\n     */\n    private String password;\n\n    /**\n     * 权限\n     */\n    private String authorities;\n}\n')])])]),n("p",[n("strong",[t._v("2.5 mapper文件")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("@Mapper\npublic interface UserMapper extends BaseMapper<UserInfo> {\n}\n")])])]),n("p",[n("strong",[t._v("2.6 application-common.yml")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('spring:\n  cloud:\n    nacos:\n      config:\n        shared-configs:\n          - data-id: common.yaml\n            refresh: true\n  redis:\n    host: ${redis.host}\n    port: ${redis.port}\n    database: ${redis.database}\n    password: ${redis.password}\n    # 配置数据源\n  datasource:\n    url: ${mysql.datasource.url}\n    username: ${mysql.datasource.username}\n    password: ${mysql.datasource.password}\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    druid:\n      filters: stat\n      maxActive: 20\n      initialSize: 1\n      maxWait: 60000\n      minIdle: 1\n  # mybatis-plus相关配置\n  mybatis-plus:\n    # xml扫描，多个目录用逗号或者分号分隔（告诉 Mapper 所对应的 XML 文件位置）\n    mapper-locations: classpath:**/*Mapper.xml\n    # 以下配置均有默认值,可以不设置\n    global-config:\n      #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";\n      id-type: 0\n      #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"\n      field-strategy: 2\n      #驼峰下划线转换\n      db-column-underline: true\n      #刷新mapper 调试神器\n      refresh-mapper: false\n    configuration:\n      # 是否开启自动驼峰命名规则映射:从数据库列名到Java属性驼峰命名的类似映射\n      map-underscore-to-camel-case: true\n      cache-enabled: false\n      jdbc-type-for-null: \'null\'\n')])])]),n("p",[n("strong",[t._v("2.7 bootstrap.properties：配置统一的nacos注册、配置中心地址")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("spring.cloud.nacos.discovery.server-addr=127.0.0.1:8848\nspring.cloud.nacos.config.server-addr=127.0.0.1:8848\nspring.cloud.nacos.config.file-extension=yaml\n")])])]),n("p",[n("strong",[t._v("2.8 用于网关转发请求后路径失败问题，配置全局cookie：NacosConfig")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('@Configuration\npublic class NacosConfig {\n\n    /**\n     * 用于改变程序自动获取的本机ip\n     */\n    @Bean\n    @Primary\n    public NacosDiscoveryProperties nacosProperties() {\n        NacosDiscoveryProperties nacosDiscoveryProperties = new NacosDiscoveryProperties();\n        nacosDiscoveryProperties.setIp("localhost");\n        return nacosDiscoveryProperties;\n    }\n}\n')])])]),n("h4",{attrs:{id:"_3-搭建springcloud-auth-项目结构图如下"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-搭建springcloud-auth-项目结构图如下"}},[t._v("#")]),t._v(" 3. 搭建springcloud-auth：项目结构图如下")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/rule-liu/pic/raw/master/img/image-20210405103647036.png",alt:"image-20210405103647036"}})]),t._v(" "),n("p",[n("strong",[t._v("3.1 依赖文件 pom.xml")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('<?xml version="1.0" encoding="UTF-8"?>\n<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">\n    <modelVersion>4.0.0</modelVersion>\n    <parent>\n        <groupId>com.rule.demo</groupId>\n        <artifactId>nacos-spring-cloud-demo</artifactId>\n        <version>0.0.1-SNAPSHOT</version>\n    </parent>\n    <artifactId>springcloud-auth</artifactId>\n    <version>0.0.1-SNAPSHOT</version>\n    <name>springcloud-auth</name>\n    <description>Demo project for Spring Boot</description>\n    <properties>\n        <java.version>1.8</java.version>\n    </properties>\n\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>com.rule</groupId>\n            <artifactId>springcloud-common</artifactId>\n            <version>0.0.1-SNAPSHOT</version>\n        </dependency>\n    </dependencies>\n</project>\n')])])]),n("p",[n("strong",[t._v("3.2 搭建授权中心 AuthorizationServerConfiguration")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('/**\n * 授权服务中心\n */\n@Configuration\n@EnableAuthorizationServer\npublic class AuthorizationServerConfiguration extends AuthorizationServerConfigurerAdapter {\n\n    @Autowired\n    AuthenticationManager authenticationManager;\n\n    @Autowired\n    RedisConnectionFactory redisConnectionFactory;\n\n    @Autowired\n    private DataSource dataSource;\n\n    @Autowired\n    private ClientDetailsService clientDetailsService;\n\n    @Autowired\n    @Qualifier("jwtTokenStore")\n    private TokenStore jwtTokenStore;\n\n    @Autowired\n    @Qualifier("accessTokenConverter")\n    private JwtAccessTokenConverter jwtAccessTokenConverter;\n\n    @Autowired\n    @Qualifier("userDetailsService")\n    private UserDetailsService userDetailsService;\n\n    @Override\n    public void configure(ClientDetailsServiceConfigurer clients) throws Exception {\n        clients.jdbc(dataSource).clients(clientDetailsService);\n    }\n\n    @Override\n    public void configure(AuthorizationServerEndpointsConfigurer endpoints) {\n        // userDetailsService 使用refresh_token 时需要\n        endpoints.userDetailsService(userDetailsService)\n                .tokenStore(jwtTokenStore)\n                .accessTokenConverter(jwtAccessTokenConverter)\n                .authenticationManager(authenticationManager);\n    }\n\n    /**\n     * 获取密钥需要身份验证，使用单点登陆时必须配置\n     *\n     * @param security security\n     */\n    @Override\n    public void configure(AuthorizationServerSecurityConfigurer security) {\n        // 使用单点登陆时必须配置\n        security.tokenKeyAccess("isAuthenticated()");\n        // 不适用单点\n//        security\n//                .tokenKeyAccess("permitAll()")\n//                .checkTokenAccess("permitAll()")\n//                .allowFormAuthenticationForClients();\n    }\n\n    @Bean\n    public ClientDetailsService clientDetails() {\n        return new JdbcClientDetailsService(dataSource);\n    }\n\n}\n')])])]),n("p",[n("strong",[t._v("3.3 自定义用户登录校验类 DomainUserDetailsService")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('@Slf4j\n@Service("userDetailsService")\npublic class DomainUserDetailsService implements UserDetailsService {\n\n    @Resource\n    private UserMapper userMapper;\n\n    @Override\n    public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {\n        // 数据库中查询用户信息\n        QueryWrapper<UserInfo> wrapper = new QueryWrapper<>();\n        wrapper.eq("username", username);\n        UserInfo user = userMapper.selectOne(wrapper);\n        if (user == null) {\n            throw new UsernameNotFoundException("用户" + username + "不存在");\n        }\n        return new User(user.getUsername(), user.getPassword(),\n                AuthorityUtils.commaSeparatedStringToAuthorityList(user.getAuthorities()));\n    }\n}\n')])])]),n("p",[n("strong",[t._v("3.4 资源配置中心 ResourceServerConfig")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('/**\n * 资源服务器配置\n */\n@Configuration\n@EnableResourceServer\npublic class ResourceServerConfig extends ResourceServerConfigurerAdapter {\n\n    @Override\n    public void configure(HttpSecurity http) throws Exception {\n        http.authorizeRequests()\n                .anyRequest()\n                .authenticated()\n                .and()\n                .requestMatchers()\n                .antMatchers("/user/**");\n    }\n\n    @Override\n    public void configure(ResourceServerSecurityConfigurer resources) {\n        resources.resourceId("dev");\n    }\n}\n')])])]),n("p",[n("strong",[t._v("3.5 springsecurity 配置类，主要是对路径的放行")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('@Configuration\n@EnableWebSecurity\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        http.csrf().disable()// 禁用跨站攻击\n                .authorizeRequests()\n                .antMatchers("/oauth/**", "/login/**",  "/login.html",\n                        "/success.html", "/fail.html")\n                .permitAll()\n                .anyRequest()\n                .authenticated()\n                .and()\n                .formLogin()\n                .loginPage("/login.html")\n                .loginProcessingUrl("/demo-login")\n                .failureForwardUrl("/login/fail")\n                .permitAll();\n    }\n\n    @Bean(name = BeanIds.AUTHENTICATION_MANAGER)\n    @Override\n    public AuthenticationManager authenticationManagerBean() throws Exception {\n        return super.authenticationManagerBean();\n    }\n}\n')])])]),n("p",[n("strong",[t._v("3.6 配置文件 bootstrap.yml, applicaiton.yml 主要配置端口就不展示了")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("spring:\n  application:\n    name: springcloud-auth\n  cloud:\n    nacos:\n      config:\n        shared-configs:\n          - data-id: common.yaml\n            refresh: true\n## 引入application-common.yml\n  profiles:\n    include: common\n")])])]),n("h4",{attrs:{id:"_4-搭建oauth-client"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-搭建oauth-client"}},[t._v("#")]),t._v(" 4. 搭建oauth-client")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/rule-liu/pic/raw/master/img/image-20210405103852004.png",alt:"image-20210405103852004"}})]),t._v(" "),n("p",[n("strong",[t._v("4.1 依赖文件 pom.xml")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('<?xml version="1.0" encoding="UTF-8"?>\n<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">\n    <modelVersion>4.0.0</modelVersion>\n    <parent>\n        <groupId>com.rule.demo</groupId>\n        <artifactId>nacos-spring-cloud-demo</artifactId>\n        <version>0.0.1-SNAPSHOT</version>\n    </parent>\n    <artifactId>springcloud-auth</artifactId>\n    <version>0.0.1-SNAPSHOT</version>\n    <name>springcloud-auth</name>\n    <description>Demo project for Spring Boot</description>\n    <properties>\n        <java.version>1.8</java.version>\n    </properties>\n\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>com.rule</groupId>\n            <artifactId>springcloud-common</artifactId>\n            <version>0.0.1-SNAPSHOT</version>\n        </dependency>\n    </dependencies>\n</project>\n')])])]),n("p",[n("strong",[t._v("4.2 权限过滤中心：AuthenticationFilter，这块可以提出来放到common模块中作为公共的权限过滤")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('@Component\npublic class AuthenticationFilter extends OncePerRequestFilter {\n\n    @Override\n    protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response,\n                                    FilterChain filterChain) throws ServletException, IOException {\n        String token = request.getHeader("json-token");\n        if (StringUtils.isNotBlank(token)) {\n            String json = new String(Base64Utils.decodeFromUrlSafeString(token));\n            JSONObject jsonObject = JSON.parseObject(json);\n            //获取用户身份信息、权限信息\n            String principal = jsonObject.getString("principal");\n            JSONArray tempJsonArray = jsonObject.getJSONArray("authorities");\n            String[] authorities = tempJsonArray.toArray(new String[0]);\n            //身份信息、权限信息填充到用户身份token对象中\n            UsernamePasswordAuthenticationToken authenticationToken = new UsernamePasswordAuthenticationToken(principal, null,\n                    AuthorityUtils.createAuthorityList(authorities));\n            //创建details\n            authenticationToken.setDetails(new WebAuthenticationDetailsSource().buildDetails(request));\n            //将authenticationToken填充到安全上下文\n            SecurityContextHolder.getContext().setAuthentication(authenticationToken);\n        }\n        filterChain.doFilter(request, response);\n    }\n}\n')])])]),n("p",[n("strong",[t._v("4.3 资源认证中心：ResourceServerConfig")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('@Configuration\n@EnableResourceServer\npublic class ResourceServerConfig extends ResourceServerConfigurerAdapter {\n\n\n    @Autowired\n    @Qualifier("jwtTokenStore")\n    private TokenStore tokenStore;\n\n    /**\n     * 资源ID\n     */\n    private static final String RESOURCE_ID = "dev";\n\n\n    /**\n     * 资源配置\n     */\n    @Override\n    public void configure(ResourceServerSecurityConfigurer resources) {\n        resources.resourceId(RESOURCE_ID)\n                .tokenStore(tokenStore)\n                .stateless(true);\n    }\n\n    /**\n     * 请求配置\n     */\n    @Override\n    public void configure(HttpSecurity http) throws Exception {\n        http.authorizeRequests()\n                .anyRequest()\n                .authenticated()\n                .and()\n                .requestMatchers()\n                .antMatchers("/user/**");\n    }\n}\n')])])]),n("p",[n("strong",[t._v("4.4 测试类 UserController")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('@RequestMapping("/user")\n@RestController\npublic class UserController {\n\n    @RequestMapping("/getCurrentUser")\n    public Object getCurrentUser(Authentication authentication) {\n        return authentication;\n    }\n}\n')])])]),n("h4",{attrs:{id:"_5-springcloud-gateway-作为请求的转发。"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-springcloud-gateway-作为请求的转发。"}},[t._v("#")]),t._v(" 5. springcloud Gateway：作为请求的转发。")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/rule-liu/pic/raw/master/img/image-20210405104006613.png",alt:"image-20210405104006613"}})]),t._v(" "),n("p",[n("strong",[t._v("5.1 pom.xml 文件")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('<?xml version="1.0" encoding="UTF-8"?>\n<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">\n    <modelVersion>4.0.0</modelVersion>\n    <parent>\n        <groupId>com.rule.demo</groupId>\n        <artifactId>nacos-spring-cloud-demo</artifactId>\n        <version>0.0.1-SNAPSHOT</version>\n    </parent>\n    <groupId>com.rule</groupId>\n    <artifactId>springcloud-gateway</artifactId>\n    <version>0.0.1-SNAPSHOT</version>\n    <name>springcloud-gateway</name>\n    <description>Project for Spring Boot</description>\n    <properties>\n        <java.version>1.8</java.version>\n    </properties>\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-starter-gateway</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>com.rule</groupId>\n            <artifactId>springcloud-common</artifactId>\n            <version>0.0.1-SNAPSHOT</version>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-webflux</artifactId>\n            <exclusions>\n                <exclusion>\n                    <groupId>org.springframework.boot</groupId>\n                    <artifactId>spring-boot-starter-web</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>org.springframework</groupId>\n                    <artifactId>spring-web</artifactId>\n                </exclusion>\n            </exclusions>\n        </dependency>\n    </dependencies>\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n            </plugin>\n        </plugins>\n    </build>\n</project>\n')])])]),n("p",[n("strong",[t._v("5.2 网关跨域配置：GatewayCorsConfiguration")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('@Configuration\npublic class GatewayCorsConfiguration {\n\n    @Bean\n    public CorsWebFilter corsWebFilter() {\n        CorsConfiguration corsConfiguration = new CorsConfiguration();\n        corsConfiguration.addAllowedHeader("*");\n        corsConfiguration.addAllowedMethod("*");\n        corsConfiguration.addAllowedOrigin("*");\n        corsConfiguration.setAllowCredentials(true);\n        UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource();\n        source.registerCorsConfiguration("/**", corsConfiguration);\n        return new CorsWebFilter(source);\n    }\n}\n')])])]),n("p",[n("strong",[t._v("5.3 网关过滤请求类：GatewayFilterConfig")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('@Component\n@Slf4j\n@Order(-1)\npublic class GatewayFilterConfig implements GlobalFilter {\n\n    @Autowired\n    @Qualifier("jwtTokenStore")\n    private TokenStore tokenStore;\n\n    @Override\n    public Mono<Void> filter(ServerWebExchange exchange, GatewayFilterChain chain) {\n        String requestUrl = exchange.getRequest().getPath().value();\n        AntPathMatcher pathMatcher = new AntPathMatcher();\n        //1 认证服务所有放行\n        if (pathMatcher.match("/oauth/**", requestUrl)) {\n            return chain.filter(exchange);\n        }\n        //2 检查token是否存在\n        String token = getToken(exchange);\n        if (StringUtils.isBlank(token)) {\n            return noTokenMono(exchange);\n        }\n        //3 判断是否是有效的token\n        OAuth2AccessToken oAuth2AccessToken;\n        try {\n            oAuth2AccessToken = tokenStore.readAccessToken(token);\n            Map<String, Object> additionalInformation = oAuth2AccessToken.getAdditionalInformation();\n            //取出用户身份信息\n            String principal = additionalInformation.get("user_name").toString();\n            //获取用户权限\n            List<String> authorities = (List<String>) additionalInformation.get("authorities");\n            JSONObject jsonObject = new JSONObject();\n            jsonObject.put("principal", principal);\n            jsonObject.put("authorities", authorities);\n            //给header里面添加值\n            String base64 = Base64Utils.encodeToUrlSafeString(jsonObject.toJSONString().getBytes());\n            ServerHttpRequest tokenRequest = exchange.getRequest().mutate().header("json-token", base64).build();\n            ServerWebExchange build = exchange.mutate().request(tokenRequest).build();\n            return chain.filter(build);\n        } catch (InvalidTokenException e) {\n            log.info("无效的token: {}", token);\n            return invalidTokenMono(exchange);\n        }\n    }\n\n\n    /**\n     * 获取token\n     */\n    private String getToken(ServerWebExchange exchange) {\n        String tokenStr = exchange.getRequest().getHeaders().getFirst("Authorization");\n        if (StringUtils.isBlank(tokenStr)) {\n            return null;\n        }\n        return StringUtils.substring(tokenStr, "Bearer ".length());\n    }\n\n\n    /**\n     * 无效的token\n     */\n    private Mono<Void> invalidTokenMono(ServerWebExchange exchange) {\n        JSONObject json = new JSONObject();\n        json.put("status", HttpStatus.UNAUTHORIZED.value());\n        json.put("data", "无效的token");\n        return buildReturnMono(json, exchange);\n    }\n\n    private Mono<Void> noTokenMono(ServerWebExchange exchange) {\n        JSONObject json = new JSONObject();\n        json.put("status", HttpStatus.UNAUTHORIZED.value());\n        json.put("data", "没有token");\n        return buildReturnMono(json, exchange);\n    }\n\n\n    private Mono<Void> buildReturnMono(JSONObject json, ServerWebExchange exchange) {\n        ServerHttpResponse response = exchange.getResponse();\n        byte[] bits = json.toJSONString().getBytes(StandardCharsets.UTF_8);\n        DataBuffer buffer = response.bufferFactory().wrap(bits);\n        response.setStatusCode(HttpStatus.UNAUTHORIZED);\n        //指定编码，否则在浏览器中会中文乱码\n        response.getHeaders().add("Content-Type", "text/plain;charset=UTF-8");\n        return response.writeWith(Mono.just(buffer));\n    }\n')])])]),n("p",[n("strong",[t._v("5.4 Spring Security 配置 Security Config")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('@EnableWebFluxSecurity\n@Configuration\npublic class SecurityConfig {\n\n    @Bean\n    public SecurityWebFilterChain webFluxSecurityFilterChain(ServerHttpSecurity http) {\n        return http.authorizeExchange()\n                .pathMatchers("/**").permitAll()\n                .anyExchange().authenticated()\n                .and().csrf().disable().build();\n    }\n}\n')])])]),n("p",[n("strong",[t._v("5.5 bootstrap.yml：服务的转发地址等配置信息")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("spring:\n  application:\n    name: gateway\n  profiles:\n    include: common\n  cloud:\n    nacos:\n      config:\n        shared-configs:\n          - data-id: common.yaml\n            refresh: true\n    gateway:\n      discovery:\n        locator:\n          enabled: true\n      routes:\n      - id: provider-router\n        uri: lb://nacos-service-provider\n        predicates:\n          - Path=/config/**\n      - id: oauth-client\n        uri: lb://oauth-client\n        predicates:\n          - Path=/oauth-client/**\n      - id: springcloud-auth\n        uri: lb://springcloud-auth\n        predicates:\n          - Path=/auth/**\n        ### StripPrefix参数表示在将请求发送到下游之前从请求中剥离的路径个数。\n        filters:\n          - StripPrefix=1\n")])])]),n("h3",{attrs:{id:"三、测试"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#三、测试"}},[t._v("#")]),t._v(" 三、测试")]),t._v(" "),n("p",[t._v("上述的项目已经搭建好了，接下来就来测试一下。主要的流程是：认证中心获取授权码-》获取token-》获取资源，上述的一系列操作都是通过网关进行转发。启动项目")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/rule-liu/pic/raw/master/img/image-20210405104316640.png",alt:"image-20210405104316640"}})]),t._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/rule-liu/pic/raw/master/img/image-20210405104330682.png",alt:"image-20210405104330682"}})]),t._v(" "),n("h4",{attrs:{id:"_1-获取授权码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-获取授权码"}},[t._v("#")]),t._v(" 1. 获取授权码")]),t._v(" "),n("p",[t._v("http://localhost:9000/oauth/authorize?response_type=code&client_id=oauth-client&redirect_uri=http://localhost:9001/login，然后输入账号密码获取到code。")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/rule-liu/pic/raw/master/img/image-20210405104426351.png",alt:"image-20210405104426351"}})]),t._v(" "),n("h4",{attrs:{id:"_2-获取token"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-获取token"}},[t._v("#")]),t._v(" 2. 获取token")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/rule-liu/pic/raw/master/img/image-20210405104445238.png",alt:"image-20210405104445238"}})]),t._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/rule-liu/pic/raw/master/img/image-20210405104458420.png",alt:"image-20210405104458420"}})]),t._v(" "),n("h4",{attrs:{id:"_3-拿到token去访问-oauth-client服务-得到结果"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-拿到token去访问-oauth-client服务-得到结果"}},[t._v("#")]),t._v(" 3. 拿到token去访问，oauth-client服务，得到结果")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/rule-liu/pic/raw/master/img/image-20210405104541323.png",alt:"image-20210405104541323"}})])])}),[],!1,null,null,null);e.default=s.exports}}]);