(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{378:function(e,s,t){"use strict";t.r(s);var a=t(42),r=Object(a.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h3",{attrs:{id:"安装centos7并使用xshell连接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装centos7并使用xshell连接"}},[e._v("#")]),e._v(" 安装centos7并使用xshell连接")]),e._v(" "),t("ol",[t("li",[e._v("拉取centos7镜像："),t("code",[e._v("docker pull centos")])]),e._v(" "),t("li",[e._v("启动centos7镜像，如果不指定/bin/bash，容器运行后会自动停止："),t("code",[e._v("docker run -d -i -t <IMAGE ID> /bin/bash")]),e._v(", 首先输入 "),t("code",[e._v("docker ps")]),e._v("查看镜像的id，接着运行 "),t("code",[e._v("docker run -it -p 50001:22 --privileged centos /usr/sbin/init")]),e._v(" 将22端口映射为本地的50001端口，后面使用xshell登录,端口为50001")]),e._v(" "),t("li",[e._v("进入centos7容器："),t("code",[e._v("docker exec -it 84314aaa1ec6 /bin/bash")]),e._v("，84314aaa1ec6为容器id")]),e._v(" "),t("li",[e._v("安装ssh必备的东西：")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("yum install net-tools.x86_64\n yum install -y openssh-server\n")])])]),t("ol",{attrs:{start:"5"}},[t("li",[e._v("修改配置文件 "),t("code",[e._v("vi /etc/ssh/sshd_config")]),e._v("，端口为22")]),e._v(" "),t("li",[e._v("启动服务："),t("code",[e._v("systemctl start sshd")])]),e._v(" "),t("li",[e._v("安装并设置centos的密码："),t("code",[e._v("yum install passwd -y")]),e._v(": 安装密码服务，\n设置密码："),t("code",[e._v("passwd")]),e._v(": 设置系统root用户密码，输入两次密码成功")]),e._v(" "),t("li",[e._v("使用xshell进行链接，通过windos10系统使用xshell连接docker的centos7系统 ，IP是windows10系统的IP，端口为运行容器的主机端口，在这里是50001,输入用户名、密码，连接成功.\n"),t("img",{attrs:{src:"https://i.bmp.ovh/imgs/2021/03/8dc9cd061b6697c4.png",alt:"image"}})])]),e._v(" "),t("blockquote",[t("p",[e._v("安装过程可能会出现网络问题，因为我本地设置了代码，所以需要centos中设置网络代理")])]),e._v(" "),t("h3",{attrs:{id:"在centos中安装docker"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#在centos中安装docker"}},[e._v("#")]),e._v(" 在centos中安装docker")]),e._v(" "),t("ol",[t("li",[e._v("更新源："),t("code",[e._v("yum update")]),e._v(", 谨慎使用不要用于生产环境")]),e._v(" "),t("li",[e._v("安装需要的软件包， yum-util 提供yum-config-manager功能，另外两个是devicemapper驱动依赖的："),t("code",[e._v("yum install -y yum-utils device-mapper-persistent-data lvm2")])]),e._v(" "),t("li",[e._v("设置yum源（选择其中一个）：我选择是aliyun")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("# 中央仓库\nyum-config-manager --add-repo http://download.docker.com/linux/centos/docker-ce.repo\n# 阿里仓库\nyum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n")])])]),t("ol",{attrs:{start:"4"}},[t("li",[e._v("查看所有仓库中所有docker版本，并选择特定版本安装："),t("code",[e._v("yum list docker-ce --showduplicates | sort -r")]),e._v(" "),t("img",{attrs:{src:"https://i.bmp.ovh/imgs/2021/03/c0973ef3b48fcfdf.png",alt:""}})]),e._v(" "),t("li",[e._v("安装docker，期间一直按y即可")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("#安装最新版本(推荐)\nyum install docker-ce\n#安装特定版本\nyum install docker-ce-版本号\n# 例如\nyum install docker-ce-18.06.3.ce\n")])])]),t("ol",{attrs:{start:"6"}},[t("li",[e._v("验证安装完成："),t("code",[e._v("docker --version")])]),e._v(" "),t("li",[e._v("docker常用命令")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("docker ps 查看当前正在运行的容器\ndocker ps -a 查看所有容器的状态\ndocker start/stop id/name 启动/停止某个容器\ndocker attach id 进入某个容器(使用exit退出后容器也跟着停止运行)\ndocker exec -ti id 启动一个伪终端以交互式的方式进入某个容器（使用exit退出后容器不停止运行）\ndocker images 查看本地镜像\ndocker rm id/name 删除某个容器\ndocker rmi id/name 删除某个镜像\n#  复制ubuntu容器并且重命名为test且运行，然后以伪终端交互式方式进入容器，运行bash\ndocker run --name test -ti ubuntu /bin/bash \ndocker build -t soar/centos:7.1 .  通过当前目录下的Dockerfile创建一个名为soar/centos:7.1的镜像\n# 以镜像soar/centos:7.1创建名为test的容器，并以后台模式运行，并做端口映射到宿主机2222端口，P参数重启容器宿主机端口会发生改变\ndocker run -d -p 2222:22 --name test soar/centos:7.1\n")])])]),t("h3",{attrs:{id:"安装mysql"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装mysql"}},[e._v("#")]),e._v(" 安装mysql")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("下载mysql\n"),t("code",[e._v("docker pull mysql8.0")])])]),e._v(" "),t("li",[t("p",[e._v("在本地目录增加mysql的数据目录和配置文件映射")])])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("docker run -it -v D:/software/mysql/data:/var/lib/mysql -v D:/software/mysql/config/my.cnf:/etc/my.cnf -v D:/software/mysql/priv:/var/lib/priv --restart=always --name mysql8.0 -e MYSQL_ROOT_PASSWORD=6789@jkl -p 3306:3306 -d mysql:8.0 --lower-case-table-names=1\n")])])]),t("ul",[t("li",[e._v("进入mysql 修改配置")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("docker exec -it mysql8.0 bash\nmysql -u root -p\nselect host,user,plugin,authentication_string from mysql.user;\n-- localhost为只有本机能进行登录，改成为%\nALTER user 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '6789@jkl';\n")])])]),t("ul",[t("li",[e._v("登录docker中的mysql")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("docker exec -it mysql8.0 bash\nmysql -u root -p\nuse mysql;\nupdate user set host = '%' where user = 'root'; \n查询是否修改成功：\nselect host, user from user;\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);